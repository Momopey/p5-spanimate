{"src":"\n\n// Maximum number of iterations for each point on the complex plane\nconst maxiterations = 250;\n\n// Colors to be used for each possible iteration count\nconst colorsRed = [];\nconst colorsGreen = [];\nconst colorsBlue = [];\n\ns.setup = ()=>{\n  // let time = 1.5;\n  // let numKeyFrames = e.count(\"time\")\n  // let currentFrameStart = 0;\n  // while((e.get(\"time\",currentFrameStart) ?? 10000000) < time){\n  //   currentFrameStart++;\n  // }\n  // console.log(\" sdofhds\", (e.get(\"time\",currentFrameStart) ?? 100) < time)\n  // console.log(\"cfs\",currentFrameStart)\n  s.pixelDensity(1);\n  s.createCanvas(400, 400);\n  s.colorMode(s.HSB, 1);\n\n  // Create the colors to be used for each possible iteration count\n  for (let n = 0; n < maxiterations; n++) {\n    // Gosh, we could make fancy colors here if we wanted\n    let hu = s.sqrt(n / maxiterations);\n    let col = s.color(hu, 255, 150);\n    colorsRed[n] = s.red(col);\n    colorsGreen[n] = s.green(col);\n    colorsBlue[n] = s.blue(col);\n  }\n}\n\nlet useE = false;\nlet time = 0;\n\nfunction lerpVec2(val,v1,v2){\n  return vec2(s.map(val,0,1,v1.x,v2.x),s.map(val,0,1,v1.y,v2.y))\n}\ns.draw = ()=>{\n  time+= 0.015\n  s.background(255);\n  // let ca = map(mouseX, 0, width, -1, 1); //-0.70176;\n  // let cb = map(mouseY, 0, height, -1, 1); //-0.3842;\n  if(useE){\n    time = e.get(\"time\")\n  }\n  let numKeyFrames = e.count(\"time\")\n  let currentFrameStart = 0;\n  while((e.get(\"time\",currentFrameStart) ?? 100) < time){\n    currentFrameStart++;\n  }\n  currentFrameStart--;\n  let prevFrameTime = e.get(\"time\",currentFrameStart)\n  let nextFrameTime = e.get(\"time\",currentFrameStart+1) ?? time;\n  let interpFract = s.map(time,prevFrameTime,nextFrameTime,0,1)\n\n  let prevScale = e.get(\"scale\",currentFrameStart) ?? e.get(\"scale\", numKeyFrames -1);\n  let nextScale = e.get(\"scale\",currentFrameStart+1) ?? e.get(\"scale\", numKeyFrames -1);\n  let scale = useE? Math.pow(0.5,e.get(\"scale\")) : s.map(interpFract,0,1,Math.pow(0.5,prevScale),Math.pow(0.5,nextScale)) ;\n\n  \n  let prevPos = e.get(\"pos\",currentFrameStart) ?? e.get(\"pos\", numKeyFrames -1);\n  let nextPos = e.get(\"pos\",currentFrameStart+1) ?? e.get(\"pos\", numKeyFrames -1);\n  let pos =  useE? e.get(\"pos\") : lerpVec2(interpFract,prevPos,nextPos)\n  \n  let prevParam = e.get(\"param\",currentFrameStart) ?? e.get(\"param\", numKeyFrames -1);\n  let nextParam = e.get(\"param\",currentFrameStart+1) ?? e.get(\"param\", numKeyFrames -1);\n  let param =  useE? e.get(\"param\") : lerpVec2(interpFract,prevParam,nextParam)\n  let ca = param.x; //sin(angle);\n  let cb = param.y;\n\n  \n\n  // // Establish a range of values on the complex plane\n  // // A different range will allow us to \"zoom\" in or out on the fractal\n\n  // // It all starts with the width, try higher or lower values\n  // //let w = abs(sin(angle)) * 5;\n  let w = 5 * scale;\n  let h = (w * s.height) / s.width;\n\n  // Start at negative half the width and height\n  let xmin = pos.x + (-w / 2);\n  let ymin = pos.y + (-h / 2);\n\n  // Make sure we can write to the pixels[] array.\n  // Only need to do this once since we don't do any other drawing.\n  s.loadPixels();\n\n  // x goes from xmin to xmax\n  let xmax = xmin + w;\n  // y goes from ymin to ymax\n  let ymax = ymin + h;\n\n  // Calculate amount we increment x,y for each pixel\n  let dx = (xmax - xmin) / s.width;\n  let dy = (ymax - ymin) / s.height;\n\n  // Start y\n  let y = ymin;\n  for (let j = 0; j < s.height; j++) {\n    // Start x\n    let x = xmin;\n    for (let i = 0; i < s.width; i++) {\n      // Now we test, as we iterate z = z^2 + cm does z tend towards infinity?\n      let a = x;\n      let b = y;\n      let n = 0;\n      while (n < maxiterations) {\n        let aa = a * a;\n        let bb = b * b;\n        // Infinity in our finite world is simple, let's just consider it 16\n        if (aa + bb > 4.0) {\n          break; // Bail\n        }\n        let twoab = 2.0 * a * b;\n        a = aa - bb + ca;\n        b = twoab + cb;\n        n++;\n      }\n\n      // We color each pixel based on how long it takes to get to infinity\n      // If we never got there, let's pick the color black\n      let pix = (i + j * s.width) * 4;\n      if (n == maxiterations) {\n        s.pixels[pix + 0] = 0;\n        s.pixels[pix + 1] = 0;\n        s.pixels[pix + 2] = 0;\n      } else {\n        // Otherwise, use the colors that we made in setup()\n        s.pixels[pix + 0] = colorsRed[n];\n        s.pixels[pix + 1] = colorsGreen[n];\n        s.pixels[pix + 2] = colorsBlue[n];\n      }\n      x += dx;\n    }\n    y += dy;\n  }\n  s.updatePixels();\n  \n  s.fill(255);\n  // s.text(`CFS: cfs ${currentFrameStart} ${prevFrameTime} ${nextFrameTime} time: ${time} ${interpFract}`,20,20)\n}","edit":{"param":{"valueInfo":{"type":"Vector2","value":{"x":0.3909484863281249,"y":0.40065917968749987,"z":0},"editOrigin":{"x":0.3620935058593749,"y":0.3715966796874999,"z":0},"editScale":0.03125},"data":{"0":{"valueInfo":{"type":"Vector2","value":{"x":0.37335937499999994,"y":0.31000000000000005,"z":0},"editOrigin":{"x":0,"y":0,"z":0},"editScale":1}},"1":{"valueInfo":{"type":"Vector2","value":{"x":0.37335937499999994,"y":0.31000000000000005,"z":0},"editOrigin":{"x":0,"y":0,"z":0},"editScale":1}},"2":{"valueInfo":{"type":"Vector2","value":{"x":0.37335937499999994,"y":0.31000000000000005,"z":0},"editOrigin":{"x":0,"y":0,"z":0},"editScale":1}},"3":{"valueInfo":{"type":"Vector2","value":{"x":0.36335937499999993,"y":0.3799999999999999,"z":0},"editOrigin":{"x":0,"y":0,"z":0},"editScale":1}},"4":{"valueInfo":{"type":"Vector2","value":{"x":0.36335937499999993,"y":0.3799999999999999,"z":0},"editOrigin":{"x":0,"y":0,"z":0},"editScale":1}},"5":{"valueInfo":{"type":"Vector2","value":{"x":0.36335956573486317,"y":0.37991210937499986,"z":0},"editOrigin":{"x":0.36336280822753897,"y":0.3800097656249999,"z":0},"editScale":0.00048828125}},"6":{"valueInfo":{"type":"Vector2","value":{"x":0.3633790969848632,"y":0.3796777343749999,"z":0},"editOrigin":{"x":0.36336280822753897,"y":0.3800097656249999,"z":0},"editScale":0.00048828125}},"7":{"valueInfo":{"type":"Vector2","value":{"x":0.3633172607421874,"y":0.3790966796874999,"z":0},"editOrigin":{"x":0.36336280822753897,"y":0.3800097656249999,"z":0},"editScale":0.0009765625}},"8":{"valueInfo":{"type":"Vector2","value":{"x":0.36330101013183586,"y":0.3782763671874999,"z":0},"editOrigin":{"x":0.3633172607421874,"y":0.3790966796874999,"z":0},"editScale":0.0009765625}},"9":{"valueInfo":{"type":"Vector2","value":{"x":0.3632522583007812,"y":0.3765966796874999,"z":0},"editOrigin":{"x":0.3633172607421874,"y":0.3790966796874999,"z":0},"editScale":0.00390625}},"10":{"valueInfo":{"type":"Vector2","value":{"x":0.3628747558593749,"y":0.3745654296874999,"z":0},"editOrigin":{"x":0.3633172607421874,"y":0.3790966796874999,"z":0},"editScale":0.0078125}},"11":{"valueInfo":{"type":"Vector2","value":{"x":0.3620935058593749,"y":0.3715966796874999,"z":0},"editOrigin":{"x":0.3633172607421874,"y":0.3790966796874999,"z":0},"editScale":0.0078125}},"12":{"valueInfo":{"type":"Vector2","value":{"x":0.35954162597656236,"y":0.3667529296874999,"z":0},"editOrigin":{"x":0.3620935058593749,"y":0.3715966796874999,"z":0},"editScale":0.0078125}},"13":{"valueInfo":{"type":"Vector2","value":{"x":0.35464599609374986,"y":0.36190917968749986,"z":0},"editOrigin":{"x":0.3620935058593749,"y":0.3715966796874999,"z":0},"editScale":0.015625}},"14":{"valueInfo":{"type":"Vector2","value":{"x":0.3523022460937499,"y":0.3595654296874999,"z":0},"editOrigin":{"x":0.3620935058593749,"y":0.3715966796874999,"z":0},"editScale":0.015625}},"15":{"valueInfo":{"type":"Vector2","value":{"x":0.3471984863281249,"y":0.3659716796874999,"z":0},"editOrigin":{"x":0.3620935058593749,"y":0.3715966796874999,"z":0},"editScale":0.03125}},"16":{"valueInfo":{"type":"Vector2","value":{"x":0.3909484863281249,"y":0.40065917968749987,"z":0},"editOrigin":{"x":0.3620935058593749,"y":0.3715966796874999,"z":0},"editScale":0.03125}}}},"scale":{"valueInfo":{"type":"number","value":4.596,"max":20,"min":0,"step":0.001},"data":{"0":{"valueInfo":{"type":"number","value":0,"max":20,"min":0,"step":0.001}},"1":{"valueInfo":{"type":"number","value":2.893,"max":20,"min":0,"step":0.001}},"2":{"valueInfo":{"type":"number","value":6.189,"max":20,"min":0,"step":0.001}},"3":{"valueInfo":{"type":"number","value":7.315,"max":20,"min":0,"step":0.001}},"4":{"valueInfo":{"type":"number","value":12.59,"max":20,"min":0,"step":0.001}},"5":{"valueInfo":{"type":"number","value":12.59,"max":20,"min":0,"step":0.001}},"6":{"valueInfo":{"type":"number","value":11.605,"max":20,"min":0,"step":0.001}},"7":{"valueInfo":{"type":"number","value":9.898,"max":20,"min":0,"step":0.001}},"8":{"valueInfo":{"type":"number","value":9.528,"max":20,"min":0,"step":0.001}},"9":{"valueInfo":{"type":"number","value":8.807,"max":20,"min":0,"step":0.001}},"10":{"valueInfo":{"type":"number","value":8.476,"max":20,"min":0,"step":0.001}},"11":{"valueInfo":{"type":"number","value":7.653,"max":20,"min":0,"step":0.001}},"12":{"valueInfo":{"type":"number","value":6.845,"max":20,"min":0,"step":0.001}},"13":{"valueInfo":{"type":"number","value":5.929,"max":20,"min":0,"step":0.001}},"14":{"valueInfo":{"type":"number","value":4.596,"max":20,"min":0,"step":0.001}},"15":{"valueInfo":{"type":"number","value":4.596,"max":20,"min":0,"step":0.001}},"16":{"valueInfo":{"type":"number","value":4.596,"max":20,"min":0,"step":0.001}}}},"pos":{"valueInfo":{"type":"Vector2","value":{"x":0.30747802734375007,"y":0.5913867187499999,"z":0},"editOrigin":{"x":0.23830810546875006,"y":0.52638671875,"z":0},"editScale":0.125},"data":{"0":{"valueInfo":{"type":"Vector2","value":{"x":0.17547744750976565,"y":0.47751953124999996,"z":0},"editOrigin":{"x":0.1749044799804688,"y":0.47593749999999996,"z":0},"editScale":0.001953125}},"1":{"valueInfo":{"type":"Vector2","value":{"x":0.17547744750976565,"y":0.47751953124999996,"z":0},"editOrigin":{"x":0.1749044799804688,"y":0.47593749999999996,"z":0},"editScale":0.001953125}},"2":{"valueInfo":{"type":"Vector2","value":{"x":0.18120697021484378,"y":0.48374999999999996,"z":0},"editOrigin":{"x":0.1749044799804688,"y":0.47593749999999996,"z":0},"editScale":0.015625}},"3":{"valueInfo":{"type":"Vector2","value":{"x":0.1894882202148438,"y":0.47874999999999995,"z":0},"editOrigin":{"x":0.1749044799804688,"y":0.47593749999999996,"z":0},"editScale":0.015625}},"4":{"valueInfo":{"type":"Vector2","value":{"x":0.1888894653320313,"y":0.47890625,"z":0},"editOrigin":{"x":0.1894882202148438,"y":0.47874999999999995,"z":0},"editScale":0.0078125}},"5":{"valueInfo":{"type":"Vector2","value":{"x":0.18916942596435551,"y":0.47922363281249997,"z":0},"editOrigin":{"x":0.1888894653320313,"y":0.47890625,"z":0},"editScale":0.00048828125}},"6":{"valueInfo":{"type":"Vector2","value":{"x":0.18987258911132818,"y":0.479921875,"z":0},"editOrigin":{"x":0.1888894653320313,"y":0.47890625,"z":0},"editScale":0.001953125}},"7":{"valueInfo":{"type":"Vector2","value":{"x":0.19197692871093758,"y":0.4813476562499999,"z":0},"editOrigin":{"x":0.19163818359375007,"y":0.48138671874999994,"z":0},"editScale":0.0078125}},"8":{"valueInfo":{"type":"Vector2","value":{"x":0.19439880371093757,"y":0.48388671874999994,"z":0},"editOrigin":{"x":0.19163818359375007,"y":0.48138671874999994,"z":0},"editScale":0.0078125}},"9":{"valueInfo":{"type":"Vector2","value":{"x":0.19934692382812508,"y":0.4887304687499999,"z":0},"editOrigin":{"x":0.19163818359375007,"y":0.48138671874999994,"z":0},"editScale":0.015625}},"10":{"valueInfo":{"type":"Vector2","value":{"x":0.20580566406250006,"y":0.49482421874999993,"z":0},"editOrigin":{"x":0.19163818359375007,"y":0.48138671874999994,"z":0},"editScale":0.03125}},"11":{"valueInfo":{"type":"Vector2","value":{"x":0.21622314453125008,"y":0.50513671875,"z":0},"editOrigin":{"x":0.19163818359375007,"y":0.48138671874999994,"z":0},"editScale":0.0625}},"12":{"valueInfo":{"type":"Vector2","value":{"x":0.23726806640625006,"y":0.52701171875,"z":0},"editOrigin":{"x":0.23830810546875006,"y":0.52638671875,"z":0},"editScale":0.0625}},"13":{"valueInfo":{"type":"Vector2","value":{"x":0.2716430664062501,"y":0.56326171875,"z":0},"editOrigin":{"x":0.23830810546875006,"y":0.52638671875,"z":0},"editScale":0.0625}},"14":{"valueInfo":{"type":"Vector2","value":{"x":0.30747802734375007,"y":0.5913867187499999,"z":0},"editOrigin":{"x":0.23830810546875006,"y":0.52638671875,"z":0},"editScale":0.125}},"15":{"valueInfo":{"type":"Vector2","value":{"x":0.30747802734375007,"y":0.5913867187499999,"z":0},"editOrigin":{"x":0.23830810546875006,"y":0.52638671875,"z":0},"editScale":0.125}},"16":{"valueInfo":{"type":"Vector2","value":{"x":0.30747802734375007,"y":0.5913867187499999,"z":0},"editOrigin":{"x":0.23830810546875006,"y":0.52638671875,"z":0},"editScale":0.125}}}},"time":{"valueInfo":{"type":"number","value":9,"max":9,"min":0,"step":0.001},"data":{"0":{"valueInfo":{"type":"number","value":0,"max":100,"min":0,"step":0.001}},"1":{"valueInfo":{"type":"number","value":1,"max":1,"min":0,"step":0.001}},"2":{"valueInfo":{"type":"number","value":2,"max":2,"min":-2,"step":0.001}},"3":{"valueInfo":{"type":"number","value":3,"max":3,"min":0,"step":0.001}},"4":{"valueInfo":{"type":"number","value":4,"max":4,"min":0,"step":0.001}},"5":{"valueInfo":{"type":"number","value":4.2,"max":4.2,"min":0,"step":0.001}},"6":{"valueInfo":{"type":"number","value":4.5,"max":4.5,"min":0,"step":0.001}},"7":{"valueInfo":{"type":"number","value":4.8,"max":4.8,"min":0,"step":0.001}},"8":{"valueInfo":{"type":"number","value":5,"max":5,"min":0,"step":0.001}},"9":{"valueInfo":{"type":"number","value":5.5,"max":5.5,"min":-5.5,"step":0.001}},"10":{"valueInfo":{"type":"number","value":6,"max":6,"min":-6,"step":0.001}},"11":{"valueInfo":{"type":"number","value":6.3,"max":6.3,"min":-6.3,"step":0.001}},"12":{"valueInfo":{"type":"number","value":6.7,"max":6.7,"min":-6.7,"step":0.001}},"13":{"valueInfo":{"type":"number","value":7,"max":7,"min":-7,"step":0.001}},"14":{"valueInfo":{"type":"number","value":7.5,"max":7.5,"min":-7.5,"step":0.001}},"15":{"valueInfo":{"type":"number","value":8,"max":8,"min":-8,"step":0.001}},"16":{"valueInfo":{"type":"number","value":9,"max":9,"min":-9,"step":0.001}}}}}}